{"name": "test_diff[测试iphone中插广告返回]", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'dictionary_...'text': '1'}}} == []\n  Full diff:\n  - [\n  -  ,\n  - ]\n  + {\n  +  'dictionary_item_added': [root['Adparams']],\n  +  'dictionary_item_removed': [root['Error'], root['ClickThrough'], root['MultiClickTracking'], root['ClickTracking'], root['TrackingEvents'], root['Tracking'], root['Extension'], root['AdParams'], root['ThirdLeague'], root['Playsound'], root['SupportDeepLink'], root['ExcludeFbarad'], root['ThirdMonitor'], root['MediaFile'][0]['att']['type']],...\n  \n  ...Full output truncated (49 lines hidden), use '-vv' to show", "trace": "data = {'ad_url': 'm?pt=mad&adoriginal=sohu&adpr=0&al=9182663&appid=tv&build=9.3.00.0.1&c=tv&channeled=1000080005&density=3&d...eoType=m3u8&vu=0&broadcastID=0', 'base_path': '/基准xml/mad/iphone中插广告返回.xml', 'isEncrypt': 0, 'title': '测试iphone中插广告返回'}\n\n    @pytest.mark.parametrize(\"data\", r[0], ids=r[1])\n    def test_diff(data):\n        status=GetAdData.get_tvapi_data(data['ad_url'])\n        base_xml = CompareXml.get_root(path_dir + data['base_path'])\n        base_el = CompareXml.get_all_elements(base_xml,status)\n        if data['isEncrypt'] == 1:\n            res = GetAdData.get_ad_decode_data(data['ad_url'])\n        else:\n            res = GetAdData.get_ad_data(data['ad_url'])\n        root = ET.XML(res)\n        cur_el = CompareXml.get_all_elements(root,status)\n>       assert DeepDiff(base_el, cur_el) == []\nE       AssertionError: assert {'dictionary_...'text': '1'}}} == []\nE         Full diff:\nE         - [\nE         -  ,\nE         - ]\nE         + {\nE         +  'dictionary_item_added': [root['Adparams']],\nE         +  'dictionary_item_removed': [root['Error'], root['ClickThrough'], root['MultiClickTracking'], root['ClickTracking'], root['TrackingEvents'], root['Tracking'], root['Extension'], root['AdParams'], root['ThirdLeague'], root['Playsound'], root['SupportDeepLink'], root['ExcludeFbarad'], root['ThirdMonitor'], root['MediaFile'][0]['att']['type']],...\nE         \nE         ...Full output truncated (49 lines hidden), use '-vv' to show\n\nTestCase/Ad/mad/test_iphone_mad.py:34: AssertionError"}, "parameters": [{"name": "data", "value": "{'title': '测试iphone中插广告返回', 'ad_url': 'm?pt=mad&adoriginal=sohu&adpr=0&al=9182663&appid=tv&build=9.3.00.0.1&c=tv&channeled=1000080005&density=3&displayMetrics=736%2A414&du=2543.639&encd=GF77KVpP4G/5tv0s86kyDvaaTJRACcNPaDgvEIFbF/tvGo7/hOoOyYCIQImGVMPkhyqpHWKVeWEBb6mpHy4BY6DNrxjnPQ4LKRnJtuC/Jwk7gbbjaW8o8xRR%2BQaialV6xb20wpzTS3qgz9%2BDk%2BY0UxKodKnxEkBwbec3RAZRG%2BN7rBU7ct5VHl25g2Sb4c/N67SUbhobdPeVZbK1GmnU1mky7h2iRWCdAGk17xILMlLVle2mjIy0hm2oHR5Xfjp3ptUCUNChsZBDkSy1HIMZ2OC65NzodL7UL4J8DCxNGl%2B7OBDj3vZodfm9hbJzNW9BHCxienCrYusDNYkN2mpPd/lobaYBrwvAuNoa9xTlR2EuaFvWRncnPt8rSMPkPdM/p4WMnunvl9kLkSZy6oJDG6nE/GeHoKChMDjDtvKUSuQudB9NmBD%2B7fW9Ff3yRh/SMKX0ca1jD5sayM83SeTb4FmZdzHHoLG9KViiWiEQCJUPuxtLW97IJt3fKxzPoCRni0NJiQQcz4SYwtT6sTXH9cIv4Sf%2BbHTVY0xHeZUhwHik/WHTOaL93uCVY0gDCM9quTsqYt7BiFhvD5HualI3YNi4MIXMhicfheJCrNZjLuIm7dMOq9Q%2B0UVPWsxlQGOl9oqazbuSFN2lpGzcBlnLjDc73oRTZAbdOLGA2wxa%2B9avr95yJQKxd3G7ZXxlT8Eb%2BKXh6fEdgMBI3//MD7TVpA%3D%3D&ext=2096591&exten=1%2C2%2C3%2C4%2C7%2C8&guid=b850e1580a69e5386bc8e30627c8d89d&inx=1&islocaltv=0&offline=0&partner=6932&pay=0&plat=3&playerMetrics=&playerScale=0.563&playstyle=1&poid=1&privacy=1&prot=vast&protv=3.0&ptime=0&screenstate=2&sdkVersion=13.7.0&site=1&sver=9.3.00&system_type=0&vc=101141%3B101145%3B101152&vid=3691705&videoType=m3u8&vu=0&broadcastID=0', 'base_path': '/基准xml/mad/iphone中插广告返回.xml', 'isEncrypt': 0}"}], "start": 1655195513956, "stop": 1655195514124, "uuid": "52f883b7-ff06-409c-8aec-fba4b928c89f", "historyId": "ce3f2218e7c398e7414658c693d860f7", "testCaseId": "044a23893608aa07925e117eee0d85af", "fullName": "TestCase.Ad.mad.test_iphone_mad#test_diff", "labels": [{"name": "parentSuite", "value": "TestCase.Ad.mad"}, {"name": "suite", "value": "test_iphone_mad"}, {"name": "host", "value": "richardzhang-1.sohu-inc.com"}, {"name": "thread", "value": "28517-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.Ad.mad.test_iphone_mad"}]}