{"name": "test_diff[gphone瀑布流加密数据返回]", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'dictionary_... 'event': 4}}} == {}\n  Left contains 4 more items:\n  {'dictionary_item_added': [root['ads'][0]['ad'][0]['repWithAdxAd']],\n   'dictionary_item_removed': [root['ads'][0]['ad'][0]['landing_url'], root['ads'][0]['ad'][0]['creatives'], root['ads'][0]['ad'][0]['click_monitor'], root['ads'][0]['ad'][0]['template'], root['ads'][0]['ad'][0]['ext']['deeplinkflag'], root['ads'][0]['ad'][0]['ext']['display_type'], root['ads'][0]['ad'][0]['ext']['excluded'], root['ads'][0]['ad'][0]['ext']['hardflag']],\n   'iterable_item_removed': {\"root['ads'][0]['ad'][0]['event_monitor'][1]\": {'event': 1,\n                                                       ...\n  \n  ...Full output truncated (22 lines hidden), use '-vv' to show", "trace": "data = {'ad_url': 'm?prot=json&adslotid=16108&tvpid=93&gbcode=null&poid=1&catecode=0&partner=93&pt=16108&guid=null&pagecount=...fcN5vUcjffs8ByXZlpa7nw%3D%3D&vc=0', 'base_path': '/基准xml/16108/gphone瀑布流加密数据返回.json', 'isEncrypt': 1, 'isJson': 1, ...}\n\n    @pytest.mark.parametrize(\"data\", r[0], ids=r[1])\n    def test_diff(data):\n        status = 0\n        if data['isEncrypt'] == 1:\n            res = GetAdData.get_ad_decode_data(data['ad_url'])\n        else:\n            res = GetAdData.get_ad_data(data['ad_url'])\n        if data['isJson'] == 1:\n            path = path_dir + data['base_path']\n            with open(path,encoding = 'UTF-8') as f:\n                base_json = JsonHandle.get_target_result(json.load(f))\n            cur_json = JsonHandle.get_target_result(json.loads(res))\n>           assert DeepDiff(base_json, cur_json, exclude_paths=\"root['impid']\") == {}\nE           assert {'dictionary_... 'event': 4}}} == {}\nE             Left contains 4 more items:\nE             {'dictionary_item_added': [root['ads'][0]['ad'][0]['repWithAdxAd']],\nE              'dictionary_item_removed': [root['ads'][0]['ad'][0]['landing_url'], root['ads'][0]['ad'][0]['creatives'], root['ads'][0]['ad'][0]['click_monitor'], root['ads'][0]['ad'][0]['template'], root['ads'][0]['ad'][0]['ext']['deeplinkflag'], root['ads'][0]['ad'][0]['ext']['display_type'], root['ads'][0]['ad'][0]['ext']['excluded'], root['ads'][0]['ad'][0]['ext']['hardflag']],\nE              'iterable_item_removed': {\"root['ads'][0]['ad'][0]['event_monitor'][1]\": {'event': 1,\nE                                                                  ...\nE             \nE             ...Full output truncated (22 lines hidden), use '-vv' to show\n\nTestCase\\Ad\\16108\\test_gphone_16108.py:35: AssertionError"}, "parameters": [{"name": "data", "value": "{'title': 'gphone瀑布流加密数据返回', 'ad_url': 'm?prot=json&adslotid=16108&tvpid=93&gbcode=null&poid=1&catecode=0&partner=93&pt=16108&guid=null&pagecount=20&sdkv=tv8.3.90-SNAPSHOT&sver=9.7.20&density=2.75&appid=tv&forbid=0&privacy=1&timetag=1656411107058&uptime=1669569545&plat=6&encd=DokGyqDJd%2BfTWSB41jPGvLa9LfOfERlKKvdmiyMJJWglDUj4RNoPkr8RKXhDrRrivW65bNKtr26doyPz7lnFkDftT%2B7nWiDSGklhQ0CWDk9If%2BSC70tFtGKiiF9nxcA57X%2BCvE3tufplaB8xPdOOz2GlE3PnfzNvHqIfKlGKLny8l0%2BQ5rZrbqZuP3z1FXR2HfzsLjETw4ut2d9aUf4p%2FhQeg10391plbq5zUNd%2FWQNlUGT1jXcKIF0vDQzSmzrA%2FXGFizY93SPZEKBHVCGEQOEikQHGNXu9egseq63GCtKVzb4dptcezTccyvVb%2Fmr1lpZUFIVAVXprHUKkC81BpVpgbsPh7Pw1IFDankqv%2BUsc4A6z8P8gVIwiZmpzUvS46kr3S4QepWlpD0I9C24PUPLBRaGBj96k8BPvF6wETSZZ4pE607xhpHHS2i0H9G6POMqD4E2cZ3tCteoGDUlqp0JWlib35mX9O6gp9JljGhZuLCuDebBtGbIm2fvwuM7EHNUCxnFh%2FwuHzdGVT3pYVoKtb%2BbaFTHk9eat2D9mqf%2BvOrghXq%2Ff4kESygBlx5XnbXJz6vc379m1iWkATb208Wv8UkZv8xHSyBHQyzeW8pSqLecKkLc02fOPKYiqo377t0Ctqenm4uRuI9Pa5YMBhE6J8ELz0NpNjwJR1zHCv%2BkTGyPrd3OTN8NQCXcTv6DIDQKSidpDSyABwKVOWEKhG9k0QqKfrNbfHmp0%2BpccWDGVpoGgfcN5vUcjffs8ByXZlpa7nw%3D%3D&vc=0', 'base_path': '/基准xml/16108/gphone瀑布流加密数据返回.json', 'isEncrypt': 1, 'isJson': 1}"}], "start": 1676949152840, "stop": 1676949152889, "uuid": "7b7036a7-497e-46cd-9d7b-63a180ff3fe6", "historyId": "e213eafa9acc579de711e294fb896475", "testCaseId": "e3bd603721a7aac5efb3ac33d90b3ec0", "fullName": "TestCase.Ad.16108.test_gphone_16108#test_diff", "labels": [{"name": "parentSuite", "value": "TestCase.Ad.16108"}, {"name": "suite", "value": "test_gphone_16108"}, {"name": "host", "value": "weihuaguo1"}, {"name": "thread", "value": "13568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.Ad.16108.test_gphone_16108"}]}